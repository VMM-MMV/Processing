/* autogenerated by Processing revision 1293 on 2023-10-15 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Processing extends PApplet {

class Mover {
  PVector location;
  PVector velocity;
  PVector acceleration;
  float topspeed = 4;

  Mover() {
    location = new PVector(random(width), random(height));
    velocity = new PVector(0, 0);
  }

  public void update() {
    PVector mouse = new PVector(mouseX, mouseY);
    PVector dir = PVector.sub(mouse, location);
    float distance = dir.mag();
    
    // Normalize and scale by a factor inversely proportional to distance
    dir.normalize();
    float strength = map(distance, 0, width, 5, 0); // Assuming max distance is width of canvas
    dir.mult(strength);
    
    acceleration = dir;
    velocity.add(acceleration);
    velocity.limit(topspeed);
    location.add(velocity);
  }

  public void display() {
    fill(127);
    stroke(0);
    ellipse(location.x, location.y, 32, 32);
  }
}

Mover m;

public void setup() {
  /* size commented out by preprocessor */;
  m = new Mover();
}

public void draw() {
  background(255);
  m.update();
  m.display();
}


  public void settings() { size(640, 360); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Processing" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
